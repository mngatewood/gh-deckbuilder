// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Footer component Container Tests should match snapshot when there are decks 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Footer
    addDecks={[Function]}
    addSelectedDecks={[Function]}
    changeUser={[Function]}
    currentDecks={
        Array [
            Object {
              "cards": Array [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
              ],
              "class": "Brute",
              "deckId": 1,
              "deckName": "Hello",
            },
            Object {
              "cards": Array [
                10,
                2,
                3,
                12,
                5,
                6,
                7,
                8,
              ],
              "class": "Cragheart",
              "deckId": 12,
              "deckName": "Friend",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="saved-decks-tab"
>
          <h1
                    className="saved-decks-title"
          >
                    SAVED DECKS
          </h1>
</div>,
        <div
          className="saved-decks-container"
>
          <div
                    className="sign-in-request"
          >
                    <p>
                              Please sign-in:
                    </p>
                    <FirebaseAuth
                              firebaseAuth={
                                        Object {
                                                  "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                  "appName": "[DEFAULT]",
                                                  "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                  "currentUser": null,
                                                }
                              }
                              uiCallback={[Function]}
                              uiConfig={
                                        Object {
                                                  "callbacks": Object {
                                                    "signInSuccessWithAuthResult": [Function],
                                                  },
                                                  "signInFlow": "popup",
                                                  "signInOptions": Array [
                                                    "google.com",
                                                    "facebook.com",
                                                  ],
                                                }
                              }
                    />
          </div>
          <div
                    id="decks-container"
          >
                    <div
                              className="saved-deck"
                    >
                              <Link
                                        onClick={[Function]}
                                        replace={false}
                                        to="/Brute"
                              >
                                        <img
                                                  alt="Brute"
                                                  className="saved-deck-classImg"
                                                  src="Brute-icon.png"
                                        />
                                        <h1
                                                  className="saved-deck-name"
                                        />
                              </Link>
                              <button>
                                        <img
                                                  alt="delete"
                                                  className="saved-deck-deleteImg"
                                                  onClick={[Function]}
                                                  src="red-x.png"
                                        />
                              </button>
                    </div>
                    <div
                              className="saved-deck"
                    >
                              <Link
                                        onClick={[Function]}
                                        replace={false}
                                        to="/Cragheart"
                              >
                                        <img
                                                  alt="Cragheart"
                                                  className="saved-deck-classImg"
                                                  src="Cragheart-icon.png"
                                        />
                                        <h1
                                                  className="saved-deck-name"
                                        />
                              </Link>
                              <button>
                                        <img
                                                  alt="delete"
                                                  className="saved-deck-deleteImg"
                                                  onClick={[Function]}
                                                  src="red-x.png"
                                        />
                              </button>
                    </div>
          </div>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1
            className="saved-decks-title"
>
            SAVED DECKS
</h1>,
          "className": "saved-decks-tab",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "SAVED DECKS",
            "className": "saved-decks-title",
          },
          "ref": null,
          "rendered": "SAVED DECKS",
          "type": "h1",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="sign-in-request"
>
              <p>
                            Please sign-in:
              </p>
              <FirebaseAuth
                            firebaseAuth={
                                          Object {
                                                        "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                        "appName": "[DEFAULT]",
                                                        "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                        "currentUser": null,
                                                      }
                            }
                            uiCallback={[Function]}
                            uiConfig={
                                          Object {
                                                        "callbacks": Object {
                                                          "signInSuccessWithAuthResult": [Function],
                                                        },
                                                        "signInFlow": "popup",
                                                        "signInOptions": Array [
                                                          "google.com",
                                                          "facebook.com",
                                                        ],
                                                      }
                            }
              />
</div>,
            <div
              id="decks-container"
>
              <div
                            className="saved-deck"
              >
                            <Link
                                          onClick={[Function]}
                                          replace={false}
                                          to="/Brute"
                            >
                                          <img
                                                        alt="Brute"
                                                        className="saved-deck-classImg"
                                                        src="Brute-icon.png"
                                          />
                                          <h1
                                                        className="saved-deck-name"
                                          />
                            </Link>
                            <button>
                                          <img
                                                        alt="delete"
                                                        className="saved-deck-deleteImg"
                                                        onClick={[Function]}
                                                        src="red-x.png"
                                          />
                            </button>
              </div>
              <div
                            className="saved-deck"
              >
                            <Link
                                          onClick={[Function]}
                                          replace={false}
                                          to="/Cragheart"
                            >
                                          <img
                                                        alt="Cragheart"
                                                        className="saved-deck-classImg"
                                                        src="Cragheart-icon.png"
                                          />
                                          <h1
                                                        className="saved-deck-name"
                                          />
                            </Link>
                            <button>
                                          <img
                                                        alt="delete"
                                                        className="saved-deck-deleteImg"
                                                        onClick={[Function]}
                                                        src="red-x.png"
                                          />
                            </button>
              </div>
</div>,
          ],
          "className": "saved-decks-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  Please sign-in:
</p>,
                <FirebaseAuth
                  firebaseAuth={
                                    Object {
                                                      "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                      "appName": "[DEFAULT]",
                                                      "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                      "currentUser": null,
                                                    }
                  }
                  uiCallback={[Function]}
                  uiConfig={
                                    Object {
                                                      "callbacks": Object {
                                                        "signInSuccessWithAuthResult": [Function],
                                                      },
                                                      "signInFlow": "popup",
                                                      "signInOptions": Array [
                                                        "google.com",
                                                        "facebook.com",
                                                      ],
                                                    }
                  }
/>,
              ],
              "className": "sign-in-request",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Please sign-in:",
                },
                "ref": null,
                "rendered": "Please sign-in:",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "firebaseAuth": Object {
                    "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                    "appName": "[DEFAULT]",
                    "authDomain": "gh-deckbuilder.firebaseapp.com",
                    "currentUser": null,
                  },
                  "uiCallback": [Function],
                  "uiConfig": Object {
                    "callbacks": Object {
                      "signInSuccessWithAuthResult": [Function],
                    },
                    "signInFlow": "popup",
                    "signInOptions": Array [
                      "google.com",
                      "facebook.com",
                    ],
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="saved-deck"
>
                  <Link
                                    onClick={[Function]}
                                    replace={false}
                                    to="/Brute"
                  >
                                    <img
                                                      alt="Brute"
                                                      className="saved-deck-classImg"
                                                      src="Brute-icon.png"
                                    />
                                    <h1
                                                      className="saved-deck-name"
                                    />
                  </Link>
                  <button>
                                    <img
                                                      alt="delete"
                                                      className="saved-deck-deleteImg"
                                                      onClick={[Function]}
                                                      src="red-x.png"
                                    />
                  </button>
</div>,
                <div
                  className="saved-deck"
>
                  <Link
                                    onClick={[Function]}
                                    replace={false}
                                    to="/Cragheart"
                  >
                                    <img
                                                      alt="Cragheart"
                                                      className="saved-deck-classImg"
                                                      src="Cragheart-icon.png"
                                    />
                                    <h1
                                                      className="saved-deck-name"
                                    />
                  </Link>
                  <button>
                                    <img
                                                      alt="delete"
                                                      className="saved-deck-deleteImg"
                                                      onClick={[Function]}
                                                      src="red-x.png"
                                    />
                  </button>
</div>,
              ],
              "id": "decks-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/Brute"
>
                      <img
                                            alt="Brute"
                                            className="saved-deck-classImg"
                                            src="Brute-icon.png"
                      />
                      <h1
                                            className="saved-deck-name"
                      />
</Link>,
                    <button>
                      <img
                                            alt="delete"
                                            className="saved-deck-deleteImg"
                                            onClick={[Function]}
                                            src="red-x.png"
                      />
</button>,
                  ],
                  "className": "saved-deck",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <img
                          alt="Brute"
                          className="saved-deck-classImg"
                          src="Brute-icon.png"
/>,
                        <h1
                          className="saved-deck-name"
/>,
                      ],
                      "onClick": [Function],
                      "replace": false,
                      "to": "/Brute",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "Brute",
                          "className": "saved-deck-classImg",
                          "src": "Brute-icon.png",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "className": "saved-deck-name",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "h1",
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt="delete"
                        className="saved-deck-deleteImg"
                        onClick={[Function]}
                        src="red-x.png"
/>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "delete",
                        "className": "saved-deck-deleteImg",
                        "onClick": [Function],
                        "src": "red-x.png",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "button",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Link
                      onClick={[Function]}
                      replace={false}
                      to="/Cragheart"
>
                      <img
                                            alt="Cragheart"
                                            className="saved-deck-classImg"
                                            src="Cragheart-icon.png"
                      />
                      <h1
                                            className="saved-deck-name"
                      />
</Link>,
                    <button>
                      <img
                                            alt="delete"
                                            className="saved-deck-deleteImg"
                                            onClick={[Function]}
                                            src="red-x.png"
                      />
</button>,
                  ],
                  "className": "saved-deck",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <img
                          alt="Cragheart"
                          className="saved-deck-classImg"
                          src="Cragheart-icon.png"
/>,
                        <h1
                          className="saved-deck-name"
/>,
                      ],
                      "onClick": [Function],
                      "replace": false,
                      "to": "/Cragheart",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "Cragheart",
                          "className": "saved-deck-classImg",
                          "src": "Cragheart-icon.png",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "className": "saved-deck-name",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "h1",
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt="delete"
                        className="saved-deck-deleteImg"
                        onClick={[Function]}
                        src="red-x.png"
/>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "delete",
                        "className": "saved-deck-deleteImg",
                        "onClick": [Function],
                        "src": "red-x.png",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "button",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "footer",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="saved-decks-tab"
>
            <h1
                        className="saved-decks-title"
            >
                        SAVED DECKS
            </h1>
</div>,
          <div
            className="saved-decks-container"
>
            <div
                        className="sign-in-request"
            >
                        <p>
                                    Please sign-in:
                        </p>
                        <FirebaseAuth
                                    firebaseAuth={
                                                Object {
                                                            "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                            "appName": "[DEFAULT]",
                                                            "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                            "currentUser": null,
                                                          }
                                    }
                                    uiCallback={[Function]}
                                    uiConfig={
                                                Object {
                                                            "callbacks": Object {
                                                              "signInSuccessWithAuthResult": [Function],
                                                            },
                                                            "signInFlow": "popup",
                                                            "signInOptions": Array [
                                                              "google.com",
                                                              "facebook.com",
                                                            ],
                                                          }
                                    }
                        />
            </div>
            <div
                        id="decks-container"
            >
                        <div
                                    className="saved-deck"
                        >
                                    <Link
                                                onClick={[Function]}
                                                replace={false}
                                                to="/Brute"
                                    >
                                                <img
                                                            alt="Brute"
                                                            className="saved-deck-classImg"
                                                            src="Brute-icon.png"
                                                />
                                                <h1
                                                            className="saved-deck-name"
                                                />
                                    </Link>
                                    <button>
                                                <img
                                                            alt="delete"
                                                            className="saved-deck-deleteImg"
                                                            onClick={[Function]}
                                                            src="red-x.png"
                                                />
                                    </button>
                        </div>
                        <div
                                    className="saved-deck"
                        >
                                    <Link
                                                onClick={[Function]}
                                                replace={false}
                                                to="/Cragheart"
                                    >
                                                <img
                                                            alt="Cragheart"
                                                            className="saved-deck-classImg"
                                                            src="Cragheart-icon.png"
                                                />
                                                <h1
                                                            className="saved-deck-name"
                                                />
                                    </Link>
                                    <button>
                                                <img
                                                            alt="delete"
                                                            className="saved-deck-deleteImg"
                                                            onClick={[Function]}
                                                            src="red-x.png"
                                                />
                                    </button>
                        </div>
            </div>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1
              className="saved-decks-title"
>
              SAVED DECKS
</h1>,
            "className": "saved-decks-tab",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "SAVED DECKS",
              "className": "saved-decks-title",
            },
            "ref": null,
            "rendered": "SAVED DECKS",
            "type": "h1",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="sign-in-request"
>
                <p>
                                Please sign-in:
                </p>
                <FirebaseAuth
                                firebaseAuth={
                                                Object {
                                                                "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                                "appName": "[DEFAULT]",
                                                                "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                                "currentUser": null,
                                                              }
                                }
                                uiCallback={[Function]}
                                uiConfig={
                                                Object {
                                                                "callbacks": Object {
                                                                  "signInSuccessWithAuthResult": [Function],
                                                                },
                                                                "signInFlow": "popup",
                                                                "signInOptions": Array [
                                                                  "google.com",
                                                                  "facebook.com",
                                                                ],
                                                              }
                                }
                />
</div>,
              <div
                id="decks-container"
>
                <div
                                className="saved-deck"
                >
                                <Link
                                                onClick={[Function]}
                                                replace={false}
                                                to="/Brute"
                                >
                                                <img
                                                                alt="Brute"
                                                                className="saved-deck-classImg"
                                                                src="Brute-icon.png"
                                                />
                                                <h1
                                                                className="saved-deck-name"
                                                />
                                </Link>
                                <button>
                                                <img
                                                                alt="delete"
                                                                className="saved-deck-deleteImg"
                                                                onClick={[Function]}
                                                                src="red-x.png"
                                                />
                                </button>
                </div>
                <div
                                className="saved-deck"
                >
                                <Link
                                                onClick={[Function]}
                                                replace={false}
                                                to="/Cragheart"
                                >
                                                <img
                                                                alt="Cragheart"
                                                                className="saved-deck-classImg"
                                                                src="Cragheart-icon.png"
                                                />
                                                <h1
                                                                className="saved-deck-name"
                                                />
                                </Link>
                                <button>
                                                <img
                                                                alt="delete"
                                                                className="saved-deck-deleteImg"
                                                                onClick={[Function]}
                                                                src="red-x.png"
                                                />
                                </button>
                </div>
</div>,
            ],
            "className": "saved-decks-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p>
                    Please sign-in:
</p>,
                  <FirebaseAuth
                    firebaseAuth={
                                        Object {
                                                            "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                            "appName": "[DEFAULT]",
                                                            "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                            "currentUser": null,
                                                          }
                    }
                    uiCallback={[Function]}
                    uiConfig={
                                        Object {
                                                            "callbacks": Object {
                                                              "signInSuccessWithAuthResult": [Function],
                                                            },
                                                            "signInFlow": "popup",
                                                            "signInOptions": Array [
                                                              "google.com",
                                                              "facebook.com",
                                                            ],
                                                          }
                    }
/>,
                ],
                "className": "sign-in-request",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Please sign-in:",
                  },
                  "ref": null,
                  "rendered": "Please sign-in:",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "firebaseAuth": Object {
                      "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                      "appName": "[DEFAULT]",
                      "authDomain": "gh-deckbuilder.firebaseapp.com",
                      "currentUser": null,
                    },
                    "uiCallback": [Function],
                    "uiConfig": Object {
                      "callbacks": Object {
                        "signInSuccessWithAuthResult": [Function],
                      },
                      "signInFlow": "popup",
                      "signInOptions": Array [
                        "google.com",
                        "facebook.com",
                      ],
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="saved-deck"
>
                    <Link
                                        onClick={[Function]}
                                        replace={false}
                                        to="/Brute"
                    >
                                        <img
                                                            alt="Brute"
                                                            className="saved-deck-classImg"
                                                            src="Brute-icon.png"
                                        />
                                        <h1
                                                            className="saved-deck-name"
                                        />
                    </Link>
                    <button>
                                        <img
                                                            alt="delete"
                                                            className="saved-deck-deleteImg"
                                                            onClick={[Function]}
                                                            src="red-x.png"
                                        />
                    </button>
</div>,
                  <div
                    className="saved-deck"
>
                    <Link
                                        onClick={[Function]}
                                        replace={false}
                                        to="/Cragheart"
                    >
                                        <img
                                                            alt="Cragheart"
                                                            className="saved-deck-classImg"
                                                            src="Cragheart-icon.png"
                                        />
                                        <h1
                                                            className="saved-deck-name"
                                        />
                    </Link>
                    <button>
                                        <img
                                                            alt="delete"
                                                            className="saved-deck-deleteImg"
                                                            onClick={[Function]}
                                                            src="red-x.png"
                                        />
                    </button>
</div>,
                ],
                "id": "decks-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Link
                        onClick={[Function]}
                        replace={false}
                        to="/Brute"
>
                        <img
                                                alt="Brute"
                                                className="saved-deck-classImg"
                                                src="Brute-icon.png"
                        />
                        <h1
                                                className="saved-deck-name"
                        />
</Link>,
                      <button>
                        <img
                                                alt="delete"
                                                className="saved-deck-deleteImg"
                                                onClick={[Function]}
                                                src="red-x.png"
                        />
</button>,
                    ],
                    "className": "saved-deck",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <img
                            alt="Brute"
                            className="saved-deck-classImg"
                            src="Brute-icon.png"
/>,
                          <h1
                            className="saved-deck-name"
/>,
                        ],
                        "onClick": [Function],
                        "replace": false,
                        "to": "/Brute",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "alt": "Brute",
                            "className": "saved-deck-classImg",
                            "src": "Brute-icon.png",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "img",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                            "className": "saved-deck-name",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "h1",
                        },
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <img
                          alt="delete"
                          className="saved-deck-deleteImg"
                          onClick={[Function]}
                          src="red-x.png"
/>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "delete",
                          "className": "saved-deck-deleteImg",
                          "onClick": [Function],
                          "src": "red-x.png",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      "type": "button",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Link
                        onClick={[Function]}
                        replace={false}
                        to="/Cragheart"
>
                        <img
                                                alt="Cragheart"
                                                className="saved-deck-classImg"
                                                src="Cragheart-icon.png"
                        />
                        <h1
                                                className="saved-deck-name"
                        />
</Link>,
                      <button>
                        <img
                                                alt="delete"
                                                className="saved-deck-deleteImg"
                                                onClick={[Function]}
                                                src="red-x.png"
                        />
</button>,
                    ],
                    "className": "saved-deck",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <img
                            alt="Cragheart"
                            className="saved-deck-classImg"
                            src="Cragheart-icon.png"
/>,
                          <h1
                            className="saved-deck-name"
/>,
                        ],
                        "onClick": [Function],
                        "replace": false,
                        "to": "/Cragheart",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "alt": "Cragheart",
                            "className": "saved-deck-classImg",
                            "src": "Cragheart-icon.png",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "img",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                            "className": "saved-deck-name",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "h1",
                        },
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <img
                          alt="delete"
                          className="saved-deck-deleteImg"
                          onClick={[Function]}
                          src="red-x.png"
/>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "delete",
                          "className": "saved-deck-deleteImg",
                          "onClick": [Function],
                          "src": "red-x.png",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      "type": "button",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "footer",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Footer component Container Tests should match the snapshot when a user is signed in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Footer
    addDecks={[Function]}
    addSelectedDecks={[Function]}
    changeUser={[Function]}
    currentDecks={Array []}
    user="guest"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="saved-decks-tab"
>
          <h1
                    className="saved-decks-title"
          >
                    SAVED DECKS
          </h1>
</div>,
        <div
          className="saved-decks-container"
>
          <a
                    className="sign-out"
                    onClick={[Function]}
          >
                    Sign-out
          </a>
          <div
                    id="decks-container"
          >
                    
          </div>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1
            className="saved-decks-title"
>
            SAVED DECKS
</h1>,
          "className": "saved-decks-tab",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "SAVED DECKS",
            "className": "saved-decks-title",
          },
          "ref": null,
          "rendered": "SAVED DECKS",
          "type": "h1",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <a
              className="sign-out"
              onClick={[Function]}
>
              Sign-out
</a>,
            <div
              id="decks-container"
>
              
</div>,
          ],
          "className": "saved-decks-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign-out",
              "className": "sign-out",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Sign-out",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "id": "decks-container",
            },
            "ref": null,
            "rendered": Array [],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "footer",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="saved-decks-tab"
>
            <h1
                        className="saved-decks-title"
            >
                        SAVED DECKS
            </h1>
</div>,
          <div
            className="saved-decks-container"
>
            <a
                        className="sign-out"
                        onClick={[Function]}
            >
                        Sign-out
            </a>
            <div
                        id="decks-container"
            >
                        
            </div>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1
              className="saved-decks-title"
>
              SAVED DECKS
</h1>,
            "className": "saved-decks-tab",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "SAVED DECKS",
              "className": "saved-decks-title",
            },
            "ref": null,
            "rendered": "SAVED DECKS",
            "type": "h1",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <a
                className="sign-out"
                onClick={[Function]}
>
                Sign-out
</a>,
              <div
                id="decks-container"
>
                
</div>,
            ],
            "className": "saved-decks-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sign-out",
                "className": "sign-out",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Sign-out",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [],
                "id": "decks-container",
              },
              "ref": null,
              "rendered": Array [],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "footer",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Footer component Container Tests should match the snapshot without being signed in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Footer
    addDecks={[Function]}
    addSelectedDecks={[Function]}
    changeUser={[Function]}
    currentDecks={Array []}
    user="guest"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="saved-decks-tab"
>
          <h1
                    className="saved-decks-title"
          >
                    SAVED DECKS
          </h1>
</div>,
        <div
          className="saved-decks-container"
>
          <div
                    className="sign-in-request"
          >
                    <p>
                              Please sign-in:
                    </p>
                    <FirebaseAuth
                              firebaseAuth={
                                        Object {
                                                  "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                  "appName": "[DEFAULT]",
                                                  "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                  "currentUser": null,
                                                }
                              }
                              uiCallback={[Function]}
                              uiConfig={
                                        Object {
                                                  "callbacks": Object {
                                                    "signInSuccessWithAuthResult": [Function],
                                                  },
                                                  "signInFlow": "popup",
                                                  "signInOptions": Array [
                                                    "google.com",
                                                    "facebook.com",
                                                  ],
                                                }
                              }
                    />
          </div>
          <div
                    id="decks-container"
          >
                    
          </div>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1
            className="saved-decks-title"
>
            SAVED DECKS
</h1>,
          "className": "saved-decks-tab",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "SAVED DECKS",
            "className": "saved-decks-title",
          },
          "ref": null,
          "rendered": "SAVED DECKS",
          "type": "h1",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="sign-in-request"
>
              <p>
                            Please sign-in:
              </p>
              <FirebaseAuth
                            firebaseAuth={
                                          Object {
                                                        "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                        "appName": "[DEFAULT]",
                                                        "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                        "currentUser": null,
                                                      }
                            }
                            uiCallback={[Function]}
                            uiConfig={
                                          Object {
                                                        "callbacks": Object {
                                                          "signInSuccessWithAuthResult": [Function],
                                                        },
                                                        "signInFlow": "popup",
                                                        "signInOptions": Array [
                                                          "google.com",
                                                          "facebook.com",
                                                        ],
                                                      }
                            }
              />
</div>,
            <div
              id="decks-container"
>
              
</div>,
          ],
          "className": "saved-decks-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  Please sign-in:
</p>,
                <FirebaseAuth
                  firebaseAuth={
                                    Object {
                                                      "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                      "appName": "[DEFAULT]",
                                                      "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                      "currentUser": null,
                                                    }
                  }
                  uiCallback={[Function]}
                  uiConfig={
                                    Object {
                                                      "callbacks": Object {
                                                        "signInSuccessWithAuthResult": [Function],
                                                      },
                                                      "signInFlow": "popup",
                                                      "signInOptions": Array [
                                                        "google.com",
                                                        "facebook.com",
                                                      ],
                                                    }
                  }
/>,
              ],
              "className": "sign-in-request",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Please sign-in:",
                },
                "ref": null,
                "rendered": "Please sign-in:",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "firebaseAuth": Object {
                    "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                    "appName": "[DEFAULT]",
                    "authDomain": "gh-deckbuilder.firebaseapp.com",
                    "currentUser": null,
                  },
                  "uiCallback": [Function],
                  "uiConfig": Object {
                    "callbacks": Object {
                      "signInSuccessWithAuthResult": [Function],
                    },
                    "signInFlow": "popup",
                    "signInOptions": Array [
                      "google.com",
                      "facebook.com",
                    ],
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "id": "decks-container",
            },
            "ref": null,
            "rendered": Array [],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "footer",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="saved-decks-tab"
>
            <h1
                        className="saved-decks-title"
            >
                        SAVED DECKS
            </h1>
</div>,
          <div
            className="saved-decks-container"
>
            <div
                        className="sign-in-request"
            >
                        <p>
                                    Please sign-in:
                        </p>
                        <FirebaseAuth
                                    firebaseAuth={
                                                Object {
                                                            "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                            "appName": "[DEFAULT]",
                                                            "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                            "currentUser": null,
                                                          }
                                    }
                                    uiCallback={[Function]}
                                    uiConfig={
                                                Object {
                                                            "callbacks": Object {
                                                              "signInSuccessWithAuthResult": [Function],
                                                            },
                                                            "signInFlow": "popup",
                                                            "signInOptions": Array [
                                                              "google.com",
                                                              "facebook.com",
                                                            ],
                                                          }
                                    }
                        />
            </div>
            <div
                        id="decks-container"
            >
                        
            </div>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1
              className="saved-decks-title"
>
              SAVED DECKS
</h1>,
            "className": "saved-decks-tab",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "SAVED DECKS",
              "className": "saved-decks-title",
            },
            "ref": null,
            "rendered": "SAVED DECKS",
            "type": "h1",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="sign-in-request"
>
                <p>
                                Please sign-in:
                </p>
                <FirebaseAuth
                                firebaseAuth={
                                                Object {
                                                                "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                                "appName": "[DEFAULT]",
                                                                "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                                "currentUser": null,
                                                              }
                                }
                                uiCallback={[Function]}
                                uiConfig={
                                                Object {
                                                                "callbacks": Object {
                                                                  "signInSuccessWithAuthResult": [Function],
                                                                },
                                                                "signInFlow": "popup",
                                                                "signInOptions": Array [
                                                                  "google.com",
                                                                  "facebook.com",
                                                                ],
                                                              }
                                }
                />
</div>,
              <div
                id="decks-container"
>
                
</div>,
            ],
            "className": "saved-decks-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p>
                    Please sign-in:
</p>,
                  <FirebaseAuth
                    firebaseAuth={
                                        Object {
                                                            "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                                                            "appName": "[DEFAULT]",
                                                            "authDomain": "gh-deckbuilder.firebaseapp.com",
                                                            "currentUser": null,
                                                          }
                    }
                    uiCallback={[Function]}
                    uiConfig={
                                        Object {
                                                            "callbacks": Object {
                                                              "signInSuccessWithAuthResult": [Function],
                                                            },
                                                            "signInFlow": "popup",
                                                            "signInOptions": Array [
                                                              "google.com",
                                                              "facebook.com",
                                                            ],
                                                          }
                    }
/>,
                ],
                "className": "sign-in-request",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Please sign-in:",
                  },
                  "ref": null,
                  "rendered": "Please sign-in:",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "firebaseAuth": Object {
                      "apiKey": "AIzaSyBHV499x0Il6LN4XYA1JCExxTH_kgkg3pg",
                      "appName": "[DEFAULT]",
                      "authDomain": "gh-deckbuilder.firebaseapp.com",
                      "currentUser": null,
                    },
                    "uiCallback": [Function],
                    "uiConfig": Object {
                      "callbacks": Object {
                        "signInSuccessWithAuthResult": [Function],
                      },
                      "signInFlow": "popup",
                      "signInOptions": Array [
                        "google.com",
                        "facebook.com",
                      ],
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [],
                "id": "decks-container",
              },
              "ref": null,
              "rendered": Array [],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "footer",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
